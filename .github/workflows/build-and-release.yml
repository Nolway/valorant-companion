name: 'Build and Release'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # # docker
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   if: ${{ github.event_name == 'push' || github.event_name == 'release' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') }}
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - uses: rlespinasse/github-slug-action@4.2.3

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: nolway/workadventure-play

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'deploy') || contains(github.event.pull_request.labels.*.name, 'build')) }}
      #   with:
      #     context: .
      #     file: play/Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: thecodingmachine/workadventure-play:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
      #     cache-from: |
      #       type=registry,ref=thecodingmachine/workadventure-play:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
      #       type=registry,ref=thecodingmachine/workadventure-play:develop
      #     cache-to: type=inline
      #     labels: ${{ steps.meta.outputs.labels }}
      #     secrets: |
      #       "SENTRY_URL=${{ secrets.SENTRY_URL }}"
      #       "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
      #       "SENTRY_ORG=${{ secrets.SENTRY_ORG }}"
      #       "SENTRY_PROJECT=play"
      #       "SENTRY_ENVIRONMENT=${{ github.event_name == 'release' && 'production' || env.GITHUB_REF_NAME == 'master' && 'staging' || 'testing' }}"
      #       "SENTRY_RELEASE=${{ github.event_name == 'release' && env.GITHUB_REF_NAME || format('{0}@{1}', env.GITHUB_REF_NAME, env.GITHUB_SHA) }}"

      # - name: Build test image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: play/Dockerfile
      #     platforms: linux/amd64
      #     push: false
      #     tags: thecodingmachine/workadventure-play:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
      #     cache-from: |
      #       type=registry,ref=thecodingmachine/workadventure-play:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }}
      #       type=registry,ref=thecodingmachine/workadventure-play:develop
      #     cache-to: type=inline
      #     labels: ${{ steps.meta.outputs.labels }}
      #     outputs: type=docker,dest=/tmp/play.tar

      # - name: Load image (for sentry)
      #   if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'deploy') || contains(github.event.pull_request.labels.*.name, 'build')) }}
      #   run: docker load --input /tmp/play.tar

      # - name: Sentry push source maps
      #   if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'deploy') || contains(github.event.pull_request.labels.*.name, 'build')) }}
      #   continue-on-error: true
      #   env:
      #     SENTRY_URL: ${{ secrets.SENTRY_URL }}
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #     SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      #     SENTRY_PROJECT: pusher
      #     SENTRY_ENVIRONMENT: ${{ github.event_name == 'release' && 'production' || env.GITHUB_REF_NAME == 'master' && 'staging' || 'testing' }}
      #     SENTRY_RELEASE: ${{ github.event_name == 'release' && env.GITHUB_REF_NAME || format('{0}@{1}', env.GITHUB_REF_NAME, env.GITHUB_SHA) }}
      #   run: |
      #     docker run --rm \
      #       --user 0       \
      #       -e SENTRY_URL \
      #       -e SENTRY_AUTH_TOKEN \
      #       -e SENTRY_ORG \
      #       -e SENTRY_PROJECT \
      #       -e SENTRY_RELEASE \
      #       -e SENTRY_ENVIRONMENT \
      #       thecodingmachine/workadventure-play:${{ github.event_name == 'pull_request' && env.GITHUB_HEAD_REF_SLUG || env.GITHUB_REF_SLUG }} \
      #       /bin/sh -c 'npm install --dev && npm run push-sentry-sourcemaps'

      # - name: Zip image
      #   run: gzip play.tar
      #   working-directory: /tmp

      # - name: Upload image as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: play
      #     path: /tmp/play.tar.gz
