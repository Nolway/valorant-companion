// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType & DisallowNamespaces
export type BaseLocale = 'en-US'

export type Locales =
	| 'en-US'
	| 'fr'

export type Translation = RootTranslation & DisallowNamespaces

export type Translations = RootTranslation &
{
	authentication: NamespaceAuthenticationTranslation,
	guards: NamespaceGuardsTranslation
}

type RootTranslation = {}

export type NamespaceAuthenticationTranslation = {
	logout: {
		/**
		 * Y​o​u​ ​h​a​v​e​ ​b​e​e​n​ ​l​o​g​g​e​d​ ​o​u​t​.
		 */
		reply: string
	}
}

export type NamespaceGuardsTranslation = {
	onlyDm: {
		/**
		 * T​h​i​s​ ​c​o​m​m​a​n​d​ ​c​a​n​ ​o​n​l​y​ ​b​e​ ​u​s​e​d​ ​i​n​ ​D​M​s​.
		 */
		reply: string
		/**
		 * Y​o​u​ ​t​r​i​e​d​ ​t​o​ ​u​s​e​ ​t​h​e​ ​`​{​c​o​m​m​a​n​d​N​a​m​e​}​`​ ​c​o​m​m​a​n​d​ ​i​n​ ​a​ ​D​i​s​c​o​r​d​ ​s​e​r​v​e​r​.​ ​T​h​i​s​ ​c​o​m​m​a​n​d​ ​c​a​n​ ​o​n​l​y​ ​b​e​ ​u​s​e​d​ ​h​e​r​e​.
		 * @param {string} commandName
		 */
		userDm: RequiredParams<'commandName'>
	}
}

export type Namespaces =
	| 'authentication'
	| 'guards'

type DisallowNamespaces = {
	/**
	 * reserved for 'authentication'-namespace\
	 * you need to use the `./authentication/index.ts` file instead
	 */
	authentication?: "[typesafe-i18n] reserved for 'authentication'-namespace. You need to use the `./authentication/index.ts` file instead."

	/**
	 * reserved for 'guards'-namespace\
	 * you need to use the `./guards/index.ts` file instead
	 */
	guards?: "[typesafe-i18n] reserved for 'guards'-namespace. You need to use the `./guards/index.ts` file instead."
}

export type TranslationFunctions = {
	authentication: {
		logout: {
			/**
			 * You have been logged out.
			 */
			reply: () => LocalizedString
		}
	}
	guards: {
		onlyDm: {
			/**
			 * This command can only be used in DMs.
			 */
			reply: () => LocalizedString
			/**
			 * You tried to use the `{commandName}` command in a Discord server. This command can only be used here.
			 */
			userDm: (arg: { commandName: string }) => LocalizedString
		}
	}
}

export type Formatters = {}
